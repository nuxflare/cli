name: "Nuxflare Deploy"

on:
  {% if github_action_type == "full" %}
  push:
  pull_request:
  {% elsif github_action_type == "prod" %}
  push:
    branches:
      - main
  {% endif %}
  workflow_dispatch:
    inputs:
      stage:
        description: "The stage name to deploy to (optional). If not provided, a sanitized branch name will be used."
        required: false
        default: ""

concurrency:
  group: {{ "${{ github.ref }}" }}

jobs:
  deploy:
    {% if github_action_type == "full" %}if: github.event_name == 'workflow_dispatch' || github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    {% elsif github_action_type == "prod" %}if: github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    {% else %}if: github.event_name == 'workflow_dispatch'
    {% endif %}
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/cache@v4
        with:
          path: |
            .sst
          key: {{ "${{ runner.os }}-sst" }}

      {% if package_manager == "bun" %}
      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install deps
        run: bun install
      {% elsif package_manager == "pnpm" %}
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install deps
        run: pnpm install --frozen-lockfile
      {% elsif package_manager == "yarn" %}
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install deps
        run: yarn install --frozen-lockfile
      {% else %}
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci
      {% endif %}

      - name: Deploy with SST.dev
        env:
          CLOUDFLARE_API_TOKEN: {{ "${{ secrets.CLOUDFLARE_API_TOKEN }}" }}
        run: |
          # Determine deployment mode based on event type and inputs
          if [ "${GITHUB_EVENT_NAME}" = "push" ] && [ "${GITHUB_REF}" = "refs/heads/{{ "${{ github.event.repository.default_branch }}" }}" ]; then
            echo "Production deployment detected"
            DEPLOY_CMD="nuxflare deploy --production"
          else
            if [ -n "{{ "${{ github.event.inputs.stage }}" }}" ]; then
            STAGE="{{ "${{ github.event.inputs.stage }}" }}"
            else
              # Sanitize branch name: lower-case and replace non-alphanumeric chars with dashes
              STAGE=$(echo "${GITHUB_REF_NAME}" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9]/-/g')
            fi
            echo "Deploying to stage: ${STAGE}"
            DEPLOY_CMD="nuxflare deploy --stage ${STAGE}"
          fi

          echo "Running: ${DEPLOY_CMD}"
          npx ${DEPLOY_CMD}
